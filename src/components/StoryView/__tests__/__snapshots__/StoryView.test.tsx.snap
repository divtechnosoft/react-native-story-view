// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgressView component Match Snapshot 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "height": 16.428571428571427,
      "justifyContent": "space-between",
      "position": "absolute",
      "top": 16.428571428571427,
      "width": "98%",
    }
  }
/>
`;

exports[`StoryContainer component Match Snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#00000000",
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#000",
                    "justifyContent": "flex-start",
                  },
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "height": 1333.3333333333333,
                      "width": 750,
                    },
                    Object {
                      "backgroundColor": "#101010",
                      "borderRadius": 10,
                      "marginTop": 35,
                      "overflow": "hidden",
                    },
                  ]
                }
              >
                <Video
                  bufferConfig={
                    Object {
                      "bufferForPlaybackAfterRebufferMs": 10000,
                      "bufferForPlaybackMs": 10000,
                      "minBufferMs": 10000,
                    }
                  }
                  muted={false}
                  onBuffer={[Function]}
                  onEnd={[Function]}
                  onError={[Function]}
                  onLoad={[Function]}
                  onLoadStart={[Function]}
                  onProgress={[Function]}
                  onReadyForDisplay={[Function]}
                  paused={true}
                  resizeMode="contain"
                  source={
                    Object {
                      "uri": undefined,
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 10,
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
                <ActivityIndicator
                  animating={true}
                  color="#ffff"
                  pointerEvents="none"
                  size="small"
                  style={
                    Object {
                      "flex": 1,
                      "left": "48%",
                      "position": "absolute",
                      "top": "50%",
                    }
                  }
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "row",
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 16.428571428571427,
                  "justifyContent": "space-between",
                  "position": "absolute",
                  "top": 16.428571428571427,
                  "width": "98%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`StoryView component Match Snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#000",
        "justifyContent": "flex-start",
      },
      Object {
        "height": 1334,
        "width": 750,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "height": 1333.3333333333333,
          "width": 750,
        },
        Object {
          "backgroundColor": "#101010",
          "borderRadius": 10,
          "marginTop": 35,
          "overflow": "hidden",
        },
      ]
    }
  >
    <Video
      bufferConfig={
        Object {
          "bufferForPlaybackAfterRebufferMs": 10000,
          "bufferForPlaybackMs": 10000,
          "minBufferMs": 10000,
        }
      }
      onBuffer={[Function]}
      onError={[Function]}
      onLoad={[Function]}
      onLoadStart={[Function]}
      onProgress={[Function]}
      onReadyForDisplay={[Function]}
      paused={true}
      resizeMode="contain"
      source={
        Object {
          "uri": undefined,
        }
      }
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 10,
          "height": "100%",
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`StoryView should render Footer component Match Snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "#000000",
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  />
</RCTSafeAreaView>
`;
